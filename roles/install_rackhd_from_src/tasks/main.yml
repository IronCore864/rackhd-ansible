---
- name: Install dev libraries for NPM installs
  apt:
    name: ['libkrb5-dev', 'unzip']
  become: true

- name: Get RackHD from source
  git:
    repo: https://github.com/rackhd/rackhd
    dest: "{{ ansible_env.HOME }}/src"
    accept_hostkey: true
    version: "{{ branch | default('master') }}"

- name: Update git repos with latest
  shell: git fetch --all --prune
  args:
    chdir: "{{ ansible_env.HOME }}/src/{{ item }}"
  with_items:
    - on-http
    - on-tftp
    - on-dhcp-proxy
    - on-taskgraph
    - on-syslog
    - on-wss
    - on-tools

- name: Reset to the branch specified
  shell: git reset --hard {{ hash }}
  when: hash is defined
  args:
    chdir: "{{ ansible_env.HOME }}/src"

- name: Npm install Repos
  npm: 
    path: "{{ ansible_env.HOME }}/src/{{ item }}"
    production: yes
  with_items:
    - on-syslog
    - on-tftp
    - on-dhcp-proxy
    - on-taskgraph
    - on-http
    - on-wss

- name: Make common static directory
  file:
    path: "{{ ansible_env.HOME }}/src/on-http/static/http/common"
    state: directory

- name: Npm install apidoc
  shell: "npm install apidoc"
  args:
    chdir: "{{ ansible_env.HOME }}/src/on-http"

- name: Generate hosted task documentation
  shell: "npm run taskdoc"
  args:
    chdir: "{{ ansible_env.HOME }}/src/on-http"

- name: Set HTTP static directory for RackHD
  set_fact:
    http_static_directory: "{{ ansible_env.HOME }}/src/on-http/static/http"

- name: Set TFTP static directory for RackHD
  set_fact:
    tftp_static_directory: "{{ ansible_env.HOME }}/src/on-tftp/static/tftp"

- name: Download and unzip web_ui module
  unarchive:
    src: https://github.com/RackHD/on-web-ui/archive/gh-pages-2.0.zip
    dest: "{{ http_static_directory }}"
    remote_src: yes

- name: Rename web_ui module to name 'ui'
  command: "mv {{ http_static_directory }}/on-web-ui-gh-pages-2.0 {{ http_static_directory }}/ui"
